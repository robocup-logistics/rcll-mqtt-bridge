/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'application'
    id "io.freefair.lombok" version "8.0.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
    maven {
        url = uri("https://maven.pkg.github.com/robocup-logistics/rcll-java")
        credentials {
            username = "pkohout"
            password = "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"
        }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    implementation group: 'io.github.robocup-logistics', name: 'java-sdk', version: '0.1.14.3'
    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.22.3'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

}

application {
    // Define the main class for the application.
    mainClass = 'com.rcll.java.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
