/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'application'
    id "maven-publish"
    id "io.freefair.lombok" version "8.0.1"
}

group = 'io.github.robocup-logistics'
archivesBaseName = "mqtt-bridge"
version = '0.5'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    gradlePluginPortal()
    maven {
        url = uri("https://maven.pkg.github.com/robocup-logistics/rcll-java")
        credentials {
            username = System.getenv("USERNAME")
            password = System.getenv("TOKEN")
        }
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    implementation group: 'io.github.robocup-logistics', name: 'java-sdk', version: '0.1.19.1'
    implementation group: 'org.eclipse.paho', name: 'org.eclipse.paho.client.mqttv3', version: '1.2.5'
    implementation group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.22.3'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.5.0'
    implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

}

application {
    // Define the main class for the application.
    mainClass = 'com.rcll.java.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/robocup-logistics/rcll-mqtt-bridge")
            credentials {
                username = project.findProperty("gprUser") != "" ? project.findProperty("gprUser") : System.getenv("USERNAME")
                password = project. findProperty("gprToken") != "" ? project.findProperty("gprToken"): System.getenv("TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
            pom {
                name = 'Java SDK'
                description = 'Java SDK for the RoboCup Logistics League'
                url = 'https://ll.robocup.org/'
                licenses {
                    license {
                        name = 'GNU General Public License 3'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.de.html'
                    }
                }
                developers {
                    developer {
                        id = 'pkohout'
                        name = 'Peter Kohout'
                        email = 'peter.kohout@student.tugraz.at'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:grips-robocup/aruco_ros.git'
                    developerConnection = 'scm:git:ssh://github.com:grips-robocup/aruco_ros.git'
                    url = 'https://github.com/robocup-logistics/rcll-mqtt-bridge'
                }
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
